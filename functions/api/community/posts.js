// In-memory storage for beta period
let posts = [
  {
    id: Date.now(),
    category: 'Í≥µÏßÄ',
    title: 'üéâ Ïï†Ïä¨Î¶¨Ìä∏ ÌÉÄÏûÑ Î≤†ÌÉÄ ÌÖåÏä§Ìä∏ Ïò§Ìîà',
    author: 'Í¥ÄÎ¶¨Ïûê',
    content: `ÏïàÎÖïÌïòÏÑ∏Ïöî, Ïï†Ïä¨Î¶¨Ìä∏ ÌÉÄÏûÑ Ïª§ÎÆ§ÎãàÌã∞ÏûÖÎãàÎã§.

2025ÎÖÑ 11Ïõî 30ÏùºÍπåÏßÄ Î≤†ÌÉÄ ÌÖåÏä§Ìä∏ Í∏∞Í∞ÑÏûÖÎãàÎã§.
ÌòÑÏû¨Îäî ÌöåÏõêÍ∞ÄÏûÖ ÏóÜÏù¥ ÎàÑÍµ¨ÎÇò ÏùµÎ™ÖÏúºÎ°ú Í≤åÏãúÎ¨ºÏùÑ ÏûëÏÑ±Ìï† Ïàò ÏûàÏäµÎãàÎã§.

üìå Ïù¥Ïö© Í∑úÏπô:
‚Ä¢ Í≤åÏãúÎ¨º ÏûëÏÑ± Ïãú ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏÑ§Ï†ïÌï¥Ï£ºÏÑ∏Ïöî (ÏàòÏ†ï/ÏÇ≠Ï†ú Ïãú ÌïÑÏöî)
‚Ä¢ ÎåìÍ∏ÄÏùÄ ÏûêÏú†Î°≠Í≤å ÏûëÏÑ± Í∞ÄÎä•Ìï©ÎãàÎã§
‚Ä¢ Î∂ÄÏ†ÅÏ†àÌïú ÎåìÍ∏ÄÏùÄ 10Î™Ö Ïù¥ÏÉÅ Ïã†Í≥† Ïãú ÏûêÎèô Î∏îÎùºÏù∏Îìú Ï≤òÎ¶¨Îê©ÎãàÎã§
‚Ä¢ Î≤†ÌÉÄ Í∏∞Í∞Ñ ÌõÑ Ï†ïÏãù ÏÑúÎπÑÏä§Îäî ÌöåÏõêÏ†úÎ°ú Ïö¥ÏòÅÎê©ÎãàÎã§

Í±¥Ï†ÑÌïú Ïú°ÏÉÅ Ïª§ÎÆ§ÎãàÌã∞ Î¨∏ÌôîÎ•º ÎßåÎì§Ïñ¥Ï£ºÏÑ∏Ïöî!`,
    date: new Date().toISOString(),
    views: 0,
    likes: [],
    dislikes: [],
    comments: [],
    isNotice: true,
    isAdmin: true,
    reports: [],
    password: 'admin',
    isBlinded: false
  }
];

export async function onRequestGet(context) {
  // GET /api/community/posts
  return new Response(JSON.stringify({ 
    success: true, 
    posts: posts.filter(p => !p.isBlinded || p.isAdmin)
  }), {
    headers: { 
      'Content-Type': 'application/json',
      'Access-Control-Allow-Origin': '*'
    }
  });
}

export async function onRequestPost(context) {
  // POST /api/community/posts
  try {
    const body = await context.request.json();
    const newPost = {
      id: Date.now(),
      category: body.category || 'ÏûêÏú†',
      title: body.title,
      author: body.author || 'ÏùµÎ™Ö',
      content: body.content,
      password: body.password || '',
      date: new Date().toISOString(),
      views: 0,
      likes: [],
      dislikes: [],
      comments: [],
      isNotice: false,
      isAdmin: false,
      reports: [],
      isBlinded: false
    };
    
    posts.unshift(newPost);
    
    return new Response(JSON.stringify({ 
      success: true, 
      post: newPost 
    }), {
      headers: { 
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*'
      }
    });
  } catch (error) {
    return new Response(JSON.stringify({ 
      success: false, 
      error: error.message 
    }), {
      status: 400,
      headers: { 
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*'
      }
    });
  }
}

export async function onRequestOptions(context) {
  // Handle CORS preflight
  return new Response(null, {
    headers: {
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type'
    }
  });
}